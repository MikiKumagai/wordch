plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.qqviaja.gradle.MybatisGenerator' version '2.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
  mybatisGenerator
}

repositories {
	mavenCentral()
}

mybatisGenerator {
  verbose = true
  overwrite = true
  configFile = 'src/main/resources/generatorConfig.xml'

  dependencies {
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.4.2'
    mybatisGenerator 'org.postgresql:postgresql'
  }
}

dependencies {
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// implementation 'org.springframework.session:spring-session-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	// testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testImplementation 'org.springframework.security:spring-security-test'
	// testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
  implementation 'org.mybatis.generator:mybatis-generator-core:1.4.2'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'jakarta.validation:jakarta.validation-api:2.0.2'
}

tasks.named('test') {
	useJUnitPlatform()
}
